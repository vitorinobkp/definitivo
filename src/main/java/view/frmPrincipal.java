/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.Controlador;
import java.lang.String;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import model.Produto;

/**
 *
 * @author Joï¿½o Vitorino
 */
public class frmPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form frmPrincipal
     */
    public frmPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtbSistemaEstoque = new javax.swing.JTabbedPane();
        jpCadastro = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        txtProduto = new javax.swing.JTextField();
        txtPreco = new javax.swing.JTextField();
        txtQuantidade = new javax.swing.JTextField();
        txtDescricao = new javax.swing.JTextField();
        btnCadastroPesquisarCod = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        chkLinux = new javax.swing.JCheckBox();
        chkWindows = new javax.swing.JCheckBox();
        chkMacOS = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        cbModelo = new javax.swing.JComboBox<>();
        cbSlot = new javax.swing.JComboBox<>();
        cbCategoria = new javax.swing.JComboBox<>();
        btnSalvar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        jpVendas = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtVendasCodigo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtVendasProduto = new javax.swing.JTextField();
        btnPesquisarVenda = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaProdutos = new javax.swing.JTable();
        btnAdicionar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaItemVenda = new javax.swing.JTable();
        btnFinalizar = new javax.swing.JButton();
        jpRelatorios = new javax.swing.JPanel();
        btnSair = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema de Estoque");

        jLabel1.setText("Código: ");

        jLabel2.setText("Produto:");

        jLabel3.setText("Preço: ");

        jLabel4.setText("Quantidade:");

        jLabel5.setText("Descrição:");

        txtCodigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodigoFocusLost(evt);
            }
        });

        txtQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantidadeActionPerformed(evt);
            }
        });

        txtDescricao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescricaoActionPerformed(evt);
            }
        });

        btnCadastroPesquisarCod.setText("Pesquisar");
        btnCadastroPesquisarCod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastroPesquisarCodActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Compatibilidade de Software"));

        chkLinux.setText("GNU\\Linux");

        chkWindows.setText("Windows");

        chkMacOS.setText("MacOS");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkLinux)
                    .addComponent(chkWindows)
                    .addComponent(chkMacOS))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chkLinux)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkWindows)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkMacOS)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Compatibilidade de Hardware"));

        cbModelo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selec. Modelo Socket", "Socket 1156", "Socket 1150", "Socket 1155", "Socket 775" }));

        cbSlot.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selec. modelo de Slot", "DDR2", "DDR3", "DDR4" }));

        cbCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selec. a categoria", "Processador", "Memoria DRAM", "Placa Mãe", "Outros" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbModelo, 0, 148, Short.MAX_VALUE)
                    .addComponent(cbSlot, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbCategoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbSlot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpCadastroLayout = new javax.swing.GroupLayout(jpCadastro);
        jpCadastro.setLayout(jpCadastroLayout);
        jpCadastroLayout.setHorizontalGroup(
            jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jpCadastroLayout.createSequentialGroup()
                        .addGroup(jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(36, 36, 36)
                        .addGroup(jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtProduto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                            .addComponent(txtPreco)
                            .addComponent(txtCodigo))
                        .addGap(32, 32, 32)
                        .addComponent(btnCadastroPesquisarCod))
                    .addGroup(jpCadastroLayout.createSequentialGroup()
                        .addGroup(jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpCadastroLayout.createSequentialGroup()
                                .addComponent(btnSalvar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                                .addComponent(btnExcluir))
                            .addComponent(txtDescricao)
                            .addGroup(jpCadastroLayout.createSequentialGroup()
                                .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(27, 27, 27)
                .addGroup(jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        jpCadastroLayout.setVerticalGroup(
            jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jpCadastroLayout.createSequentialGroup()
                        .addGroup(jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCadastroPesquisarCod))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txtProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpCadastroLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSalvar)
                    .addComponent(btnExcluir))
                .addContainerGap(111, Short.MAX_VALUE))
        );

        txtCodigo.getAccessibleContext().setAccessibleName("txtCodigo1");
        txtCodigo.getAccessibleContext().setAccessibleParent(this);

        jtbSistemaEstoque.addTab("Cadastro", jpCadastro);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Produtos"));

        jLabel6.setText("Codigo:");

        jLabel7.setText("Produto:");

        btnPesquisarVenda.setText("Pesquisar");
        btnPesquisarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarVendaActionPerformed(evt);
            }
        });

        tabelaProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nome Produto", "Descricação", "Preço Unit.", "Qtd. Disponível", "Qtd. Comprar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelaProdutos);

        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtVendasCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtVendasProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnPesquisarVenda)
                                .addGap(0, 30, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnAdicionar)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtVendasCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtVendasProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisarVenda))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAdicionar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Itens venda"));

        tabelaItemVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nome Produto", "Descrição", "Preço Unit.", "Quantidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabelaItemVenda);

        btnFinalizar.setText("Finalizar venda");
        btnFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnFinalizar)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(btnFinalizar)
                .addContainerGap())
        );

        javax.swing.GroupLayout jpVendasLayout = new javax.swing.GroupLayout(jpVendas);
        jpVendas.setLayout(jpVendasLayout);
        jpVendasLayout.setHorizontalGroup(
            jpVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpVendasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jpVendasLayout.setVerticalGroup(
            jpVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpVendasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jtbSistemaEstoque.addTab("Vendas", jpVendas);

        javax.swing.GroupLayout jpRelatoriosLayout = new javax.swing.GroupLayout(jpRelatorios);
        jpRelatorios.setLayout(jpRelatoriosLayout);
        jpRelatoriosLayout.setHorizontalGroup(
            jpRelatoriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 558, Short.MAX_VALUE)
        );
        jpRelatoriosLayout.setVerticalGroup(
            jpRelatoriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 461, Short.MAX_VALUE)
        );

        jtbSistemaEstoque.addTab("Relatorios", jpRelatorios);

        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Sistema de Estoque");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jtbSistemaEstoque)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(26, 26, 26)
                .addComponent(jtbSistemaEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSair)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantidadeActionPerformed

    private void txtDescricaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescricaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescricaoActionPerformed

    private void btnCadastroPesquisarCodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastroPesquisarCodActionPerformed
        int codigo = -1;
        try {
            if (!txtCodigo.getText().equals("")) {
                codigo = Integer.parseInt(txtCodigo.getText());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Código informado inválido.");
            return;
        }
        buscarProduto(codigo, txtProduto.getText());
    }//GEN-LAST:event_btnCadastroPesquisarCodActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        Controlador ctrl = new Controlador();
        if (!camposPreenchidos()) {
            JOptionPane.showMessageDialog(null, "Preencha todos os campos para realizar cadastro");
            return;
        }
        String compatWindows = chkWindows.isSelected() ? "S" : "N";
        String compatLinux = chkLinux.isSelected() ? "S" : "N";
        String compatMac = chkMacOS.isSelected() ? "S" : "N";
        String outros = chkMacOS.isSelected() ? "S" : "N";
        Double preco = Double.parseDouble(txtPreco.getText());
        String erro = ctrl.cadastrarProduto(Integer.valueOf(0), preco,
                Integer.valueOf(txtQuantidade.getText()), compatWindows, compatLinux, compatMac, outros,
                String.valueOf(txtProduto.getText()), String.valueOf(txtDescricao.getText()),
                cbModelo.getSelectedItem().toString(), cbSlot.getSelectedItem().toString(),
                cbCategoria.getSelectedItem().toString());
        JOptionPane.showMessageDialog(null, erro);
        limparTela();
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void txtCodigoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodigoFocusLost
        int codigo = -1;
        try {
            if (!txtCodigo.getText().equals("")) {
                codigo = Integer.parseInt(txtCodigo.getText());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Código informado inválido.");
            return;
        }
        buscarProduto(codigo, null);
    }//GEN-LAST:event_txtCodigoFocusLost

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        int codigo = Integer.parseInt(txtCodigo.getText());;
        try {
            if (codigo > 0) {
                codigo = Integer.parseInt(txtCodigo.getText());
            }
        } catch (Exception er) {
            JOptionPane.showMessageDialog(null, "Código digitado inválido");
            return;
        }
        exluirProduto(codigo);
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnPesquisarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarVendaActionPerformed
        Controlador ctrl = new Controlador();
        ArrayList<Produto> lstProdutos = new ArrayList<>();
        //Caso informar o código busca o produto pelo código. Caso contrário busca apenas pelo nome.
        if (txtVendasCodigo.getText() != null && !txtVendasCodigo.getText().equals("")) {
            int codigo = 0;
            try {
                codigo = Integer.parseInt(txtVendasCodigo.getText());
                Produto p = ctrl.buscarProduto(codigo, txtVendasProduto.getText());
                if (p == null) {
                    JOptionPane.showMessageDialog(null, "Nenhum produto cadastrado com o codigo informado.");
                } else {
                    lstProdutos.add(p);
                    preencheTelaVendas(lstProdutos);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao buscar produto: " + e.getMessage());
            }
        } else {//busca apenas por descricao
            lstProdutos = ctrl.buscarProdutosPorNome(txtVendasProduto.getText());
            if (lstProdutos.size() > 0) {
                preencheTelaVendas(lstProdutos);
            } else {
                JOptionPane.showMessageDialog(null, "Nenhum produto cadastrado com o codigo informado.");
            }
        }
    }//GEN-LAST:event_btnPesquisarVendaActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        try {
            Object qtdDisponivel = tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 4);
            Object qtdComprar = tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 5);
            if (Integer.parseInt(qtdDisponivel.toString()) - Integer.parseInt(qtdComprar.toString()) < 0) {
                JOptionPane.showMessageDialog(null, "Não tem produto suficiente em estoque para concluir esta venda.");
                return;
            }
            if (Integer.parseInt(qtdComprar.toString()) <= 0) {
                JOptionPane.showMessageDialog(null, "Informe um valor maior que zero para realizar a compra.");
                return;
            }
            Object valorCodigo = tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 0);
            int codigo = Integer.parseInt(valorCodigo.toString());
            Controlador ctrl = new Controlador();
            Produto p = ctrl.buscarProduto(codigo, "");
            DefaultTableModel model = (DefaultTableModel) tabelaItemVenda.getModel();
            model.addRow(new Object[]{p.getCodigo(), p.getNome(), p.getDescricao(), p.getPreco(), qtdComprar});
            tabelaItemVenda.setModel(model);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Selecione um item da lista para adicionar.");
        }
        btnPesquisarVenda.doClick();
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarActionPerformed
        //validar se tem placa sim... se tem valida se é compatível
        //só apresentar mensagem
        //só dar baixa no estoque
        try {
            String erro = "";
            if (validaPlacaMae()) {
                erro = verificaCompatibilidadeItens();
            }
            if (!erro.equals("")) {
                JOptionPane.showMessageDialog(null, erro);
            }
            for (int i = 0; i < tabelaItemVenda.getRowCount(); i++) {
                Object codigo = tabelaItemVenda.getValueAt(i,0);
                Object qtdComprar = tabelaItemVenda.getValueAt(i, 4);
                Controlador ctrl = new Controlador();
                ctrl.darBaixaNoEstoque(Integer.parseInt(codigo.toString()),Integer.parseInt(qtdComprar.toString()));
                JOptionPane.showMessageDialog(null, "Compra realizada com sucesso");
                btnPesquisarVenda.doClick();
                limparItensVenda();
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Falha na finalização da venda: " + e.getMessage());
        }
        
    }//GEN-LAST:event_btnFinalizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnCadastroPesquisarCod;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnFinalizar;
    private javax.swing.JButton btnPesquisarVenda;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> cbCategoria;
    private javax.swing.JComboBox<String> cbModelo;
    private javax.swing.JComboBox<String> cbSlot;
    private javax.swing.JCheckBox chkLinux;
    private javax.swing.JCheckBox chkMacOS;
    private javax.swing.JCheckBox chkWindows;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel jpCadastro;
    private javax.swing.JPanel jpRelatorios;
    private javax.swing.JPanel jpVendas;
    private javax.swing.JTabbedPane jtbSistemaEstoque;
    private javax.swing.JTable tabelaItemVenda;
    private javax.swing.JTable tabelaProdutos;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtPreco;
    private javax.swing.JTextField txtProduto;
    private javax.swing.JTextField txtQuantidade;
    private javax.swing.JTextField txtVendasCodigo;
    private javax.swing.JTextField txtVendasProduto;
    // End of variables declaration//GEN-END:variables

    private void buscarProduto(int codigo, String text) {
        Controlador ctrl = new Controlador();
        Produto p = ctrl.buscarProduto(codigo, text);
        if (p != null) {
            txtCodigo.setText(String.valueOf(p.getCodigo()));
            txtDescricao.setText(p.getDescricao());
            txtPreco.setText(String.valueOf(p.getPreco()));
            txtProduto.setText(p.getNome());
            txtQuantidade.setText(String.valueOf(p.getQuantidade()));
            chkLinux.setSelected(p.getCompativelLinux().equals("S"));
            chkMacOS.setSelected(p.getCompativelMac().equals("S"));
            chkWindows.setSelected(p.getCompativelWindows().equals("S"));
            cbCategoria.setSelectedItem(p.getCategoria());
            cbModelo.setSelectedItem(p.getCompativelSocket());
            cbSlot.setSelectedItem(p.getCompativelSlot());
            btnExcluir.setEnabled(true);
        } else {
            btnExcluir.setEnabled(false);
            limparTela();
        }
    }

    private void limparTela() {
        txtDescricao.setText("");
        txtPreco.setText("");
        txtProduto.setText("");
        txtQuantidade.setText("");
        chkLinux.setSelected(false);
        chkMacOS.setSelected(false);
        chkWindows.setSelected(false);
        cbCategoria.setSelectedIndex(0);
        cbModelo.setSelectedIndex(0);
        cbSlot.setSelectedIndex(0);
        btnExcluir.setEnabled(false);
    }

    private void exluirProduto(int codigo) {
        Controlador ctrl = new Controlador();
        if (codigo > 0) {
            if (ctrl.excluirProduto(codigo)) {
                JOptionPane.showMessageDialog(null, "Produto excluído com sucesso");
                limparTela();
            } else {
                JOptionPane.showMessageDialog(null, "Falha ao excluir produto.");
            }
        }
    }

    private boolean camposPreenchidos() {
        if (txtDescricao.getText().equals("")) {
            return false;
        }
        if (txtPreco.getText().equals("")) {
            return false;
        }
        if (txtProduto.getText().equals("")) {
            return false;
        }
        if (txtQuantidade.getText().equals("")) {
            return false;
        }
        return true;
    }

    private void preencheTelaVendas(ArrayList<Produto> lstProdutos) {
        DefaultTableModel model = (DefaultTableModel) tabelaProdutos.getModel();
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }
        for (Produto p : lstProdutos) {
            model.addRow(new Object[]{p.getCodigo(), p.getNome(), p.getDescricao(), p.getPreco(), p.getQuantidade(), 0});
        }
        tabelaProdutos.setModel(model);

    }

    private boolean validaPlacaMae() {
        boolean isPlacaMae = false;
        try {
            Controlador ctrl = new Controlador();
            for (int i = 0; i < tabelaItemVenda.getRowCount(); i++) {
                int codigo = Integer.valueOf(tabelaItemVenda.getValueAt(i, 0).toString());
                Produto p = ctrl.buscarProduto(codigo, "");
                return isPlacaMae(p);
            }
        } catch (Exception e) {
        }
        return isPlacaMae;
    }

    private boolean isPlacaMae(Produto p) {
        return p.getCategoria().contains("placa");
    }

    private String verificaCompatibilidadeItens() {
        String mensagem = null;
        try {
            Controlador ctrl = new Controlador();
            for (int i = 0; i < tabelaItemVenda.getRowCount(); i++) {
                int codigo1 = Integer.valueOf(tabelaItemVenda.getValueAt(i, 0).toString());
                Produto p1 = ctrl.buscarProduto(codigo1, "");
                for (int j = 0; j < tabelaItemVenda.getRowCount(); j++) {
                    int codigo2 = Integer.valueOf(tabelaItemVenda.getValueAt(j, 0).toString());
                    Produto p2 = ctrl.buscarProduto(codigo2, "");
                    String msg = isCompativel(p1, p2);
                    if (!msg.equals("")) {
                        return msg;
                    }
                }
            }
        } catch (Exception e) {
            return "Erro ao verificar itens.";
        }
        return mensagem;
    }

    private boolean isMemoriaDRAM(Produto p) {
        return p.getCategoria().contains("DRAM");
    }

    private boolean isProcessador(Produto p) {
        return p.getCategoria().contains("Processador");
    }

    private String isCompativel(Produto p1, Produto p2) {
        if (isPlacaMae(p1)) {
            if (isMemoriaDRAM(p2)) {
                if (!p1.getCompativelSlot().equals(p2.getCompativelSlot())) {
                    return "Atenção, a memória e a placa mãe não são compatíveis.";
                }
            }
            if (isProcessador(p2)) {
                if (!p1.getCompativelSocket().equals(p2.getCompativelSocket())) {
                    return "Atenção, a placa mãe e o processador não são compatíveis.";
                }
            }
        }
        return "";
    }

    private void limparItensVenda() {
        DefaultTableModel model = (DefaultTableModel) tabelaItemVenda.getModel();
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }
        tabelaItemVenda.setModel(model);
    }
}
